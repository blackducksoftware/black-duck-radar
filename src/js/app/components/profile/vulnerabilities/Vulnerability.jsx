/*
 *  black-duck-radar
 *
 *  Copyright (c) 2019 Synopsys, Inc.
 *
 *  Licensed to the Apache Software Foundation (ASF) under one
 *  or more contributor license agreements. See the NOTICE file
 *  distributed with this work for additional information
 *  regarding copyright ownership. The ASF licenses this file
 *  to you under the Apache License, Version 2.0 (the
 *  "License"); you may not use this file except in compliance
 *  with the License. You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied. See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 */

import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { clickableRow } from 'css/common/rows';
import { dateLabel, idLabel, leftFloat, nameLabel, sourceLabel, vulnerabilityStatus } from 'css/vulnerability/row';

class Vulnerability extends Component {
    static propTypes = {
        name: PropTypes.string.isRequired,
        source: PropTypes.string.isRequired,
        url: PropTypes.string.isRequired,
        created: PropTypes.string.isRequired,
        updated: PropTypes.string.isRequired
    };

    shouldComponentUpdate() {
        return true;
    }

    getDate() {
        const { created, updated } = this.props;
        let dateString = null;
        if (updated) {
            dateString = updated;
        } else if (created) {
            dateString = created;
        }

        if (dateString) {
            const date = new Date(dateString);
            const options = {
                year: 'numeric',
                month: 'short',
                day: 'numeric'
            };
            const formattedString = date.toLocaleDateString(options);
            return formattedString;
        }
        return null;
    }

    render() {
        const { name, source, url } = this.props;
        return (
            <div className={clickableRow}>
                <div className={leftFloat}>
                    <a className={nameLabel} href={url} title={name} target='_blank' rel='noopener noreferrer'>
                        <span className={idLabel}>
                            {name}
                        </span>
                        <span className={sourceLabel}>
                            {source}
                        </span>
                        <span className={dateLabel}>
                            {this.getDate()}
                        </span>
                    </a>
                </div>
            </div>
        );
    }
}

export default Vulnerability;
